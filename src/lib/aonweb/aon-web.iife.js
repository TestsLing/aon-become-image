var aonweb=function(d,D,g){"use strict";const f={TYPE_TG:1,TYPE_FP:2};let l=class{constructor({rpc_url:e="https://dev.rpc.aonet.ai",type:i=f.TYPE_FP,server:n="https://dev.rpc.aonet.ai",password:s="",storeage_url:o="",timeout:r=3e3,force_aon:c=!0}={}){if(this.rpc_url=e,this.type=i,this.server=n,this.password=s,this.storeage_url=o,this.timeout=r,this.force_aon=c,this.type==f.TYPE_FP&&this.storeage_url=="")throw new Error("storeage_url must be set when type = TYPE_FP")}static get LoginTypes(){return f}};var w;(function(t){t.NUMBER="NUMBER_NUMBER",t.HEX="NUMBER_HEX",t.STR="NUMBER_STR",t.BIGINT="NUMBER_BIGINT"})(w||(w={}));var y;(function(t){t.HEX="BYTES_HEX",t.UINT8ARRAY="BYTES_UINT8ARRAY"})(y||(y={})),w.BIGINT,y.HEX,w.HEX,y.HEX;var P;(function(t){t.EARLIEST="earliest",t.LATEST="latest",t.PENDING="pending",t.SAFE="safe",t.FINALIZED="finalized"})(P||(P={}));var I;(function(t){t.chainstart="chainstart",t.frontier="frontier",t.homestead="homestead",t.dao="dao",t.tangerineWhistle="tangerineWhistle",t.spuriousDragon="spuriousDragon",t.byzantium="byzantium",t.constantinople="constantinople",t.petersburg="petersburg",t.istanbul="istanbul",t.muirGlacier="muirGlacier",t.berlin="berlin",t.london="london",t.altair="altair",t.arrowGlacier="arrowGlacier",t.grayGlacier="grayGlacier",t.bellatrix="bellatrix",t.merge="merge",t.capella="capella",t.shanghai="shanghai"})(I||(I={}));var b=function(t,e,i,n){function s(o){return o instanceof i?o:new i(function(r){r(o)})}return new(i||(i=Promise))(function(o,r){function c(u){try{p(n.next(u))}catch(v){r(v)}}function a(u){try{p(n.throw(u))}catch(v){r(v)}}function p(u){u.done?o(u.value):s(u.value).then(c,a)}p((n=n.apply(t,e||[])).next())})};const E=Symbol.for("web3/base-provider");class T{static isWeb3Provider(e){return e instanceof T||!!(e&&e[E])}get[E](){return!0}send(e,i){this.request(e).then(n=>{i(null,n)}).catch(n=>{i(n)})}sendAsync(e){return b(this,void 0,void 0,function*(){return this.request(e)})}asEIP1193Provider(){const e=Object.create(this),i=e.request;return e.request=function(s){return b(this,void 0,void 0,function*(){return(yield i(s)).result})},e.asEIP1193Provider=void 0,e}}class R{constructor(e=new Options){try{this.options=e}catch(i){throw i}}async setItem(e,i,n){try{let s=localStorage.getItem("fingerprint"),o={key:e+"_"+s,value:i},r=localStorage.getItem("token");r=r.replace(/^\"|\"$/g,"");let c={Authorization:"Bearer "+r},a=this.options.storeage_url+"/kvapi/v1/storage/set";const u=await(await fetch(a,{method:"POST",headers:c,body:JSON.stringify(o)})).json();u&&u.success?n(null):n(new Error(JSON.stringify(u)||""))}catch(s){n(s)}}async getItem(e,i){try{let n=localStorage.getItem("token");n=n.replace(/^\"|\"$/g,"");let s={Authorization:"Bearer "+n},o=localStorage.getItem("fingerprint");e=e+"_"+o;let r=this.options.storeage_url+"/kvapi/v1/storage/get?key="+e;const a=await(await fetch(r,{method:"GET",headers:s})).json();a&&a.success?i(null,a.value):i(new Error(JSON.stringify(a)||""),null)}catch(n){i(n,null)}}}let m;const q=new Uint8Array(16);function Y(){if(!m&&(m=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!m))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return m(q)}const h=[];for(let t=0;t<256;++t)h.push((t+256).toString(16).slice(1));function G(t,e=0){return h[t[e+0]]+h[t[e+1]]+h[t[e+2]]+h[t[e+3]]+"-"+h[t[e+4]]+h[t[e+5]]+"-"+h[t[e+6]]+h[t[e+7]]+"-"+h[t[e+8]]+h[t[e+9]]+"-"+h[t[e+10]]+h[t[e+11]]+h[t[e+12]]+h[t[e+13]]+h[t[e+14]]+h[t[e+15]]}const S={randomUUID:typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function W(t,e,i){if(S.randomUUID&&!e&&!t)return S.randomUUID();t=t||{};const n=t.random||(t.rng||Y)();return n[6]=n[6]&15|64,n[8]=n[8]&63|128,G(n)}class x extends T{constructor(e=new l){try{super(),this.options=e,this.isAON=!0,window.Telegram&&window.Telegram.WebApp&&window.Telegram.WebApp.initData&&(e.type=l.LoginTypes.TYPE_TG),e.type==l.LoginTypes.TYPE_TG?(this.webapp=window.Telegram.WebApp,this.storage=window.Telegram.WebApp.CloudStorage):e.type==l.LoginTypes.TYPE_FP&&(this.storage=new R(e)),this.keystore=null,this.account=null,this._nextId=0,this.provider=new D.Web3.providers.HttpProvider(e.rpc_url)}catch(i){throw i}}async _getPassword(){return await new Promise((i,n)=>{this.storage.getItem("aon_web_sdk_password",(s,o)=>{s&&n(s),i(o)})})}async check(e){try{let i={};if(e.type==l.LoginTypes.TYPE_TG)i={platform:"telegram",initData:this.webapp.initData};else if(e.type==l.LoginTypes.TYPE_FP){let r=localStorage.getItem("fingerprint");r||(r=await new Promise((c,a)=>{const p=W();c(p)}),localStorage.setItem("fingerprint",r)),i={platform:"fingerprint",visitorId:r}}let n=e.server+"/api/v1/user/check";const o=await(await fetch(n,{method:"POST",body:JSON.stringify(i)})).json();if(o.code==0&&o.data){const r=o.data.token;return r&&this.setAuth(r),o.data}return o}catch(i){throw i}}async setPassword(e){await new Promise((i,n)=>{this.storage.setItem("aon_web_sdk_password",e,s=>{s&&n(s),i()})})}generateRandomPassword(e){const i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+{}|:<>?-=[];',./";let n="";for(let s=0;s<e;s++){const o=Math.floor(Math.random()*i.length);n+=i[o]}return n}async getAuth(){return this.options.type==l.LoginTypes.TYPE_TG?await new Promise((i,n)=>{this.storage.getItem("token",(s,o)=>{s&&n(s),i(o)})}):localStorage.getItem("token")}async setAuth(e){this.options.type==l.LoginTypes.TYPE_TG?await new Promise((i,n)=>{this.storage.setItem("token",JSON.stringify(e),s=>{s&&n(s),i()})}):localStorage.setItem("token",e)}async createUserToServer(e,i){let n={keystore:JSON.stringify(e),signature:i},s=await this.getAuth();s=s.replace(/^\"|\"$/g,"");let o={Authorization:"Bearer "+s},r=this.options.server+"/api/v1/user/create";return await(await fetch(r,{method:"POST",headers:o,body:JSON.stringify(n)})).json()}async createUser(){let e=this.generateRandomPassword(20),i=g.create(),n=await g.encrypt(i.privateKey,e),o=g.sign(JSON.stringify(n),i.privateKey).signature,r=await this.createUserToServer(n,o);if(r.code==0)return await this.setPassword(e),{keystore:n,account:i};throw new Error(r.error||r.msg)}async loadKeystore(){try{let e=await this.check(this.options);if(e.code)throw new Error(e.msg||e.error);if(e.isNewUser){let n=await this.createUser();this.account=n.account,this.keystore=n.keystore;return}let i=await this._getPassword();this.keystore=JSON.parse(e.keystore),this.account=await g.decrypt(this.keystore,i)}catch(e){console.log("loadKeystore error",e)}}request(e){return console.log("request",e),e.method=="eth_accounts"||e.method=="eth_requestAccounts"?new Promise((i,n)=>{try{if(this.account){i([this.account.address]);return}i([])}catch(s){n(s)}}):e.method=="eth_sendTransaction"?(e.method="eth_signTransaction",new Promise((i,n)=>{let s=e.params&&e.params.length&&e.params[0];s.gasLimit||(s.gasLimit=5e5),this.provider.request({method:"eth_chainId"}).then(o=>{console.log("eth_chainId ",o);let r=100199;o.result&&(r=parseInt(o.result,16)),s.chainId||(s.chainId=r),s.v=27+s.chainId*2+8,this.provider.request({method:"eth_getTransactionCount",params:[this.account.address]}).then(c=>{console.log("eth_getTransactionCount ",c),s.nonce||(s.nonce=c.result),console.log("before signTransaction param",s),g.signTransaction(new g.Transaction(s),this.account.privateKey).then(a=>{if(console.log("signTransaction ",a),a&&a.rawTransaction&&a.rawTransaction.length){const p={method:"eth_sendRawTransaction",params:[a.rawTransaction],id:this._nextId++,jsonrpc:"2.0"};this.provider.request(p).then(u=>{console.log("eth_sendRawTransaction ",u),i(u)}).catch(u=>{console.log("eth_sendRawTransaction error",u),n(u)})}else n(new Error("signTransaction error"))}).catch(a=>{console.log("signTransaction error",a),n(a)})}).catch(c=>{console.log("eth_getTransactionCount error",c),n(c)})}).catch(o=>{console.log("eth_chainId error",o),n(o)})})):this.provider.request(e)}async send(e,i){console.log("send",e,i);const n={method:e,params:i,id:this._nextId++,jsonrpc:"2.0"};return this.request(n)}}async function _(t=new l){console.log("detectEthereumProvider in");let e=!1;return await new Promise(async(n,s)=>{if(window.ethereum){if(t.force_aon&&!window.ethereum.isAON){let r=await o(t);n(r)}n(window.ethereum)}else{let r=await o(t);n(r)}async function o(r){if(console.log("createProvider in"),e)return;e=!0;const c=new x(r);return await c.loadKeystore(),window.ethereum=c,console.log("createProvider instance",c),c}})}class A{constructor(e=new l){this.options=e}async login(){return(await _(this.options)).request({method:"eth_accounts"})}}const B=1,U=2,L={1:"/api",2:"/jwt"};class N{constructor(e){if(!(e&&e.auth&&e.auth.length))throw new Error("options.auth is not found");this.auth=e.auth,this.options=e,this.init()}init(){let e="/v1";this.options&&this.options.api_version&&this.options.api_version.length&&(e=this.options.api_version),this.auth_type=this.parseAuthType(this.auth),this.path=L[this.auth_type]+e}parseAuthType(e){const i=this.decodeBase64(e);return console.log("parseAuthType",i),i.indexOf("JWT")>-1?U:B}decodeBase64(e){return typeof window<"u"&&typeof window.atob=="function"?window.atob(e):Buffer.from(e,"base64").toString("utf-8")}async prediction(e,i){try{let n="https://api.aonet.ai";this.options&&this.options.host&&this.options.host.length&&(n=this.options.host);const s=n+this.path+e;let o={apikey:this.auth};if(this.auth_type==U&&(o={Authorization:"Bearer "+this.auth}),this.options&&this.options.headers)for(const a in this.options.headers)a!="apikey"&&a!="Authorization"&&(o[a]=this.options.headers[a]);const r=await fetch(s,{method:"POST",headers:o,body:JSON.stringify(i)});return r?await r.json():{task:{is_success:!1,task_error:"network error",exec_code:"5000"}}}catch(n){console.error("Error:",n)}}}return function(t,e){typeof define=="function"&&define.amd?define(["web3","web3-eth-accounts"],e):typeof module=="object"&&module.exports?module.exports=e(require("web3"),require("web3-eth-accounts")):t.aonweb=e(t.Web3,t.Web3EthAccounts)}(typeof self<"u"?self:void 0,function(t,e){return{Options:l,User:A,AI:N,detectEthereumProvider:_}}),d.AI=N,d.Options=l,d.User=A,d.detectEthereumProvider=_,Object.defineProperty(d,Symbol.toStringTag,{value:"Module"}),d}({},Web3,Web3EthAccounts);
